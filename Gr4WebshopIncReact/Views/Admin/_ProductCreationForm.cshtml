@model List<string>

<h2>Create product</h2>

@*
     string Name                                 - text
     string Description                          - text
     string CoverImageDestination,               - Dropdown, images
    ImagesDestination                            - Dropdown, images (multiple?) https://stackoverflow.com/questions/19206919/how-to-create-checkbox-inside-dropdown
     [FQ] Details Details                        - text?
     [FQ] List<ProductCategory> Categories       - Dropdown, categories
     double Price,                               - number
     double SaleAmount,                          - number
     double SalePercentage,                      - number
     double Stock,                               - number
     DateTime DateStocked,                       - should be automated?
     string Brand                                - text
*@

<button onclick="loadFiles()">Load files</button>

<form id="product-create-form">
    <table>
        <thead>
            <tr>
                <td>Value</td>
                <td>Input</td>
            </tr>
        </thead>
        <ln />
        <tr>
            <td>
                Name
            </td>
            <td>
                <input type="text" id="p-name" maxlength="20" />
            </td>
        </tr>
        <tr>
            <td>
                Description
            </td>
            <td>
                <input type="text" id="p-desc" maxlength="2000" />
            </td>
        </tr>
        <tr>
            <td>
                Cover Image
            </td>
            <td>
      
                <select id="p-cover" name="Cover Image">
                        
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        <option value="@Model[i]"></option>
                    }

                </select>
            </td>
        </tr>
        <tr>
            <td>
                Additional Images
            </td>
            <td>
                >Dropdown+Checkbox here< (search?)
            </td>
        </tr>
        <tr>
            <td>
                Details
            </td>
            <td>
                <input type="text" id="p-details" />
            </td>
        </tr>
        <tr>
            <td>
                Categories
            </td>
            <td>
                >Dropdown+Checkbox here< (search?)
            </td>
        </tr>
        <tr>
            <td>
                Price
            </td>
            <td>
                <input type="number" id="p-price" />
            </td>
        </tr>
        <tr>
            <td>
                Discount amount
            </td>
            <td>
                <input type="number" id="p-sale-a" />
            </td>
        </tr>
        <tr>
            <td>
                Discount percentage
            </td>
            <td>
                <input type="number" id="p-sale-p" />
            </td>
        </tr>
        <tr>
            <td>
                Stock
            </td>
            <td>
                <input type="number" id="p-stock" />
            </td>
        </tr>
        <tr>
            <td>
                Date stocked
            </td>
            <td>
                <input type="date" id="p-date" />
            </td>
        </tr>
        <tr>
            <td>
                Brand
            </td>
            <td>
                <input type="text" id="p-brand" />
            </td>
        </tr>
    </table>
    <input type="button" onclick="attemptProductCreation()" value="Add Product" />
</form>
<p id="results-container">Currently lacking front-end validation</p>


<script>
    async function loadFiles() {
        var files = [];
        await axios.post('/api/FileUploading/GetAllImages') // Get list  of images for drop-down menu
            .then(res => {
                console.log("then")
                files = res.data;
            })
        for (var i = 0; i < files.length; i++) {
            console.log(files[i]);
        }
        //@Model = files;
    }

    function attemptProductCreation() {

        // Files squred from form
        let pName = document.getElementById("p-name").value;
        let pDesc = document.getElementById("p-desc").value;
        let pCover = document.getElementById("p-cover").value;
        let pImages = [];
        let pDetails = document.getElementById("p-details").value;
        let pCategories= [];
        let pPrice = document.getElementById("p-price").value;
        let pSaleAmount = document.getElementById("p-sale-a").value;
        let pSalePercant = document.getElementById("p-sale-p").value;
        let pStock = document.getElementById("p-stock").value;
        let pDate = document.getElementById("p-date").value;
        let pBrand = document.getElementById("p-brand").value;

        console.log(pCover);

        // VALIDATE HERE
        //
        //
        //
        // VALIDATE HERE

        // Request made to the backend api
        // Send formData object
        axios.post('/api/Product/createproduct', null, {
            params: {
                Name: pName,
                Description: pDesc,
                CoverImageDestination: pCover,
                ImagesDestination: pImages,
                Details: pDetails,
                Categories: pCategories,
                Price: pPrice,
                SaleAmount: pSaleAmount,
                SalePercentage: pSalePercant,
                Stock: pStock,
                DateStocked: pDate,
                Brand: pBrand
            }
        }).then(res => {
            console.log(res);
        })

        }
</script>
